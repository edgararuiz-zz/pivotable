values(sum(mpg))
mtcars %>%
rows(am) %>%
values(sum(mpg))
mtcars %>%
rows(am) %>%
columns(cyl) %>%
values(sum(mpg))
mtcars %>%
rows(am) %>%
columns(cyl) %>%
values(sum(mpg)) %>%
pivot()
library(pivotable)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(dplyr)
mtcars %>%
start_pivot_prep() %>%
dimensions(
transmission = am,
cylinder = cyl
) %>%
measurements(
no_vehicles = n(),
avg_miles = mean(mpg)
)
mtcars %>%
start_pivot_prep() %>%
dimensions(
transmission = am,
cylinder = cyl
) %>%
measures(
no_vehicles = n(),
avg_miles = mean(mpg)
)
car_pivot <- mtcars %>%
start_pivot_prep() %>%
dimensions(
transmission = am,
cylinder = cyl
) %>%
measures(
no_vehicles = n(),
avg_miles = mean(mpg)
)
car_pivot %>%
columns(transmission)
car_pivot %>%
rows(transmission)
car_pivot %>%
rows(transmission) %>%
columns(cylinder) %>%
values(no_vehicles)
car_pivot %>%
rows(transmission) %>%
columns(cylinder) %>%
values(no_vehicles) %>%
pivot()
library(pivotable)
usethis::use_data()
?usethis::use_data()
sales <- readRDS("~/randomstuff/pivot/sales.rds")
?usethis::use_data(sales)
usethis::use_data(sales)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(dplyr)
library(dplyr)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(dplyr)
library(pivotable)
sales %>%
rows(status) %>%
values(sum(sales))
sales %>%
values(sum(sales))
sales %>%
rows(status) %>%
values(sum(sales))
sales %>%
rows(status) %>%
values(sum(sales))
sales %>%
rows(status) %>%
columns(year_id) %>%
values(sum(sales))
sales %>%
rows(status) %>%
columns(year_id) %>%
values(sum(sales)) %>%
pivot()
library(pivotable)
library(dplyr)
library(pivotable)
sales %>%
values(sum(sales))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
library(dplyr)
orders <- orders %>%
group_by(ordernumber, country, year_id, month_id, customername, state, status) %>%
summarise(order_sale = sum(sales)) %>%
ungroup() %>%
start_pivot_prep() %>%
dimensions(
order_year = year_id,
order_month = month_id,
status,
country
) %>%
measurements(
no_orders = n(),
sum(order_sale),
no_sales = sum(ifelse(status %in% c("In Process", "Shipped"), 1, 0)),
sales_amount = sum(ifelse(status %in% c("In Process", "Shipped"), order_sale, 0))
)
orders <- sales %>%
group_by(ordernumber, country, year_id, month_id, customername, state, status) %>%
summarise(order_sale = sum(sales)) %>%
ungroup() %>%
start_pivot_prep() %>%
dimensions(
order_year = year_id,
order_month = month_id,
status,
country
) %>%
measurements(
no_orders = n(),
sum(order_sale),
no_sales = sum(ifelse(status %in% c("In Process", "Shipped"), 1, 0)),
sales_amount = sum(ifelse(status %in% c("In Process", "Shipped"), order_sale, 0))
)
orders <- sales %>%
group_by(ordernumber, country, year_id, month_id, customername, state, status) %>%
summarise(order_sale = sum(sales)) %>%
ungroup() %>%
start_pivot_prep() %>%
dimensions(
order_year = year_id,
order_month = month_id,
status,
country
) %>%
measures(
no_orders = n(),
sum(order_sale),
no_sales = sum(ifelse(status %in% c("In Process", "Shipped"), 1, 0)),
sales_amount = sum(ifelse(status %in% c("In Process", "Shipped"), order_sale, 0))
)
install.packages("pivottabler")
library(pivotable)
orders %>%
rows(status)
orders <- sales %>%
group_by(ordernumber, country, year_id, month_id, customername, state, status) %>%
summarise(order_sale = sum(sales)) %>%
ungroup() %>%
start_pivot_prep() %>%
dimensions(
order_year = year_id,
order_month = month_id,
status,
country
) %>%
measures(
no_orders = n(),
order_amount = sum(order_sale),
no_sales = sum(ifelse(status %in% c("In Process", "Shipped"), 1, 0)),
sales_amount = sum(ifelse(status %in% c("In Process", "Shipped"), order_sale, 0))
)
orders %>%
rows(status) %>%
values(sales_amount, order_amount)
orders %>%
rows(status) %>%
values(sales_amount)
orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount)
pt <- orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount)
?pivottabler
orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount) %>%
pivtable::to_pivottabler()
orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount) %>%
pivotable:::to_pivottabler()
orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount) %>%
pivotable:::to_pivottabler(.$.pivot_table)
t <- orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount) %>%
t <- orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount)
t <- orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount)
t$.pivot_table
pt <- t$.pivot_table %>%
pivotable:::to_pivottabler()
pt
pt$renderPivot()
t <- orders %>%
rows(status) %>%
columns(order_year, order_month) %>%
values(sales_amount)
pt <- t$.pivot_table %>%
pivotable:::to_pivottabler()
pt <- t$.pivot_table %>%
pivotable:::to_pivottabler()
pt$renderPivot()
orders %>%
rows(status) %>%
columns(order_year, order_month) %>%
values(sales_amount)
orders %>%
rows(status) %>%
columns(order_year) %>%
values(sales_amount)
library(nycflights13)
library(tidyverse)
library(lubridate)
glimpse(flights)
tribble(
~id, ~date,
1,  "2019-01-01",
1,  "2019-02-01",
2,  "2019-01-01",
2,  "2019-01-01",
3,  "2019-02-01",
3,  "2019-02-01",
4,  "2019-03-01",
)
tribble(
~id, ~date,
1,  "2019-01-01",
1,  "2019-02-01",
2,  "2019-01-01",
2,  "2019-01-01",
3,  "2019-02-01",
3,  "2019-02-01",
4,  "2019-03-01",
) %>%
mutate(date = as_date(date))
ids <- tribble(
~id, ~date,
1,  "2019-01-01",
1,  "2019-02-01",
2,  "2019-01-01",
2,  "2019-01-01",
3,  "2019-02-01",
3,  "2019-02-01",
4,  "2019-03-01",
) %>%
mutate(date = as_date(date))
ids
ids %>%
filter(date >= myd("02/01/2019"))
myd("02/01/2019")
ids %>%
filter(date >= mdy("02/01/2019"))
ids %>%
filter(date >= mdy("02/01/2019")) %>%
group_by(id)
ids %>%
filter(date >= mdy("02/01/2019")) %>%
group_by(id) %>%
summarise()
ids %>%
filter(date >= mdy("02/01/2019")) %>%
group_by(id) %>%
summarise() %>%
count()
styler:::style_selection()
ids <- tribble(
~id, ~date
1, "2020-01-01"
2, "2021-04-02"
3, "2019-12-23"
) %>%
mutate(date = as_date(date))
ids <- tribble(
~id, ~date
1, "2020-01-01"
2, "2021-04-02"
3, "2019-12-23"
) %>%
mutate(date = as_date(date))
ids <- tribble(
~id, ~date
1, "2020-01-01",
2, "2021-04-02",
3, "2019-12-23"
) %>%
mutate(date = as_date(date))
tribble(
~id, ~date
1, "2020-01-01",
2, "2021-04-02",
3, "2019-12-23"
)
ids <- tribble(
~id, ~date,
1, "2020-01-01",
2, "2021-04-02",
3, "2019-12-23"
) %>%
mutate(date = as_date(date))
ids
ids %>%
transpose()
ids %>%
transpose(as_tibble)
ids %>%
transpose() %>%
map(as_tibble)
ids %>%
transpose() %>%
map(~as_tibble(d = as_date(.x$date)))
ids %>%
transpose() %>%
map(~.x$date)
ids %>%
transpose() %>%
map(~.as_date(x$date))
ids %>%
transpose() %>%
map(~as_date(.x$date))
ids %>%
transpose() %>%
map(~date %--% as_date(.x$date))
ids %>%
transpose() %>%
map(~today() %--% as_date(.x$date))
as_date("2020-01-01")
today()  %--% as_date("2020-01-01")
?today
today() - as_date("2020-01-01")
days(today() - as_date("2020-01-01"))
as.integer(today() - as_date("2020-01-01"))
as.integer(as_date("2020-01-01") - today())
d <- as.integer(as_date("2020-01-01") - today())
d <- as.integer(as_date("2020-01-01") - today()
d <- as.integer(as_date("2020-01-01") - today())
seq_along(d)
seq_len(d)
map(seq_len(d),~ today() + (.x - 1))
map(seq_len(d),~ tibble(date = today() + (.x - 1)) )
t <- ids %>%
transpose() %>%
map(~{
d <- as.integer(as_date(.x$date) - today())
map(seq_len(d),~ tibble(date = today() + (.x - 1)))
})
View(t)
t
t <- ids %>%
transpose() %>%
map(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
head(t)
t <- ids %>%
transpose() %>%
map_dfr(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
t <- ids %>%
transpose() %>%
map(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
t[[1]]
map_dfr(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
map_df(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
t <- ids %>%
transpose() %>%
map(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map_df(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
t <- ids %>%
transpose() %>%
map(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map_dfr(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
t
t <- ids %>%
transpose() %>%
map_dfr(~{
id <- .x$id
d <- as.integer(as_date(.x$date) - today())
map_dfr(
seq_len(d),
~ tibble(
id = id,
date = today() + (.x - 1)
)
)
})
t
sales
library(pivotable)
sales
sales %>%
rows(list(year_id, month_id))
library(dplyr)
sales %>%
rows(list(year_id, month_id))
library(rlang)
set_hierarchy <- function(...) {
vars <- enquos(...)
}
sales %>%
rows(order_date = set_hierarchy(year_id, month_id))
sales %>%
rows(order_date = year_id)
t <- sales %>%
rows(order_date = set_hierarchy(year_id, month_id))
View(t)
sales %>%
rows(order_date = year_id)
sales %>%
rows(order_date = year_id)
sales %>%
rows(order_date = year_id)
